// @ts-nocheck
// This file is generated by Umi automatically
// DO NOT CHANGE IT MANUALLY!
import routeProps from './routeProps';

if (process.env.NODE_ENV === 'development') {
  Object.entries(routeProps).forEach(([key, value]) => {
    const internalProps = ['path', 'id', 'parentId', 'isLayout', 'isWrapper', 'layout', 'clientLoader'];
    Object.keys(value).forEach((prop) => {
      if (internalProps.includes(prop)) {
        throw new Error(
          `[UmiJS] route '${key}' should not have '${prop}' prop, please remove this property in 'routeProps'.`
        )
      }
    })
  })
}

import React from 'react';

export async function getRoutes() {
  const routes = {"recommend":{"path":"recommend","id":"recommend"},"contact":{"path":"contact","id":"contact"},"service":{"path":"service","id":"service"},"scenic":{"path":"scenic","id":"scenic"},"guide":{"path":"guide","id":"guide"},"index":{"path":"/","id":"index"},"food":{"path":"food","id":"food"},"wifi":{"path":"wifi","id":"wifi"}} as const;
  return {
    routes,
    routeComponents: {
'recommend': React.lazy(() => import(/* webpackChunkName: "src__pages__recommend" */'../../../src/pages/recommend.tsx')),
'contact': React.lazy(() => import(/* webpackChunkName: "src__pages__contact" */'../../../src/pages/contact.tsx')),
'service': React.lazy(() => import(/* webpackChunkName: "src__pages__service" */'../../../src/pages/service.tsx')),
'scenic': React.lazy(() => import(/* webpackChunkName: "src__pages__scenic" */'../../../src/pages/scenic.tsx')),
'guide': React.lazy(() => import(/* webpackChunkName: "src__pages__guide" */'../../../src/pages/guide.tsx')),
'index': React.lazy(() => import(/* webpackChunkName: "src__pages__index" */'../../../src/pages/index.tsx')),
'food': React.lazy(() => import(/* webpackChunkName: "src__pages__food" */'../../../src/pages/food.tsx')),
'wifi': React.lazy(() => import(/* webpackChunkName: "src__pages__wifi" */'../../../src/pages/wifi.tsx')),
},
  };
}
